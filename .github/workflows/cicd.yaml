name: CI/CD

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'website/**'
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'website/**'
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust-version: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Cache Rust Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.os }}-cargo-

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
          override: true

      - name: Install Protobuf Compiler (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Install Protobuf Compiler (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install protobuf
      - name: Install Protobuf Compiler (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install protoc --yes

      - name: Build (no default-features)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features

      - name: Run tests (no default-features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --no-default-features

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features
